<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kotlin on Matthieu Jimenez Website</title>
    <link>http://jimenez.lu/tags/kotlin/</link>
    <description>Recent content in Kotlin on Matthieu Jimenez Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Apr 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://jimenez.lu/tags/kotlin/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Files Metrics</title>
      <link>http://jimenez.lu/project/utils/filemetrics/</link>
      <pubDate>Mon, 17 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://jimenez.lu/project/utils/filemetrics/</guid>
      <description>Introduction Written in Kotlin, this project aims at providing a library for computing common metrics of a C file from Java program. The analysis is based on the result provided by the joern tool. To allow a better handling of dependency the tool has been ported organized for maven and only the parts relevant to this project were kept. This version can be found in the joern repository
Use The library is written in Kotlin but can be used from Java.</description>
    </item>
    
    <item>
      <title>Tools Utils</title>
      <link>http://jimenez.lu/project/utils/toolsutils/</link>
      <pubDate>Mon, 17 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://jimenez.lu/project/utils/toolsutils/</guid>
      <description>This library gather all utilitary methods that are used by the different modules of the bugs and vulnerabilities project and that could be used in other context.
Content  Git utilitary + diff MultiThreading Regexp Serialization  Documentation
Git This module provide some useful function when trying to mine a git repository
Use  val git = GitUtilitary(&amp;quot;pathto .git folder&amp;quot;) git.retrievingFileFromSpecificCommit(&amp;quot;hashOfCommit&amp;quot;,&amp;quot;fullpathOfFile&amp;quot;)  Class data class DeveloperHistory(val totalNumberOfDeveloper: Int = 0, val currentNumberOfDeveloper: Int = 0, val numberOfChanges: Int = 0) : Serializable  Methods  retrievingFileFromSpecificCommit listOfCommitImpactingAFile previousCommitImpactingAFile gitBlame gitBlameNbDev getDevHistoryOfAFile (use Developer History class) getDeltaFile (Delta History) getListOfModifiedFile getCommitMessage getTimeCommit  Diff This side module provides methods for computing unified diff or delta of between 2 versions of a file</description>
    </item>
    
  </channel>
</rss>